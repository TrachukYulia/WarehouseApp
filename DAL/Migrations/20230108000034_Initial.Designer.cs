// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    [Migration("20230108000034_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.Customer", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tom",
                            PhoneNumber = "+3809192937",
                            Surname = "Soyer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob",
                            PhoneNumber = "+3802397489",
                            Surname = "Karl"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sam",
                            PhoneNumber = "+3808398269",
                            Surname = "Taylor"
                        });
                });

            modelBuilder.Entity("DAL.Models.Good", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("TypeOfGoodId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TypeOfGoodId");

                    b.ToTable("Goods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10,
                            Name = "Brick",
                            Price = 30m,
                            TypeOfGoodId = 2
                        },
                        new
                        {
                            Id = 2,
                            Amount = 5,
                            Name = "Concrete slab",
                            Price = 100m,
                            TypeOfGoodId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 7,
                            Name = "Woden bars",
                            Price = 50m,
                            TypeOfGoodId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 20,
                            Name = "Drywall",
                            Price = 30m,
                            TypeOfGoodId = 3
                        },
                        new
                        {
                            Id = 5,
                            Amount = 30,
                            Name = "Plastic pipes",
                            Price = 45m,
                            TypeOfGoodId = 3
                        });
                });

            modelBuilder.Entity("DAL.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("GoodId")
                        .HasColumnType("integer");

                    b.Property<int>("StatusOfOrder")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("GoodId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DAL.Models.Queue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Queues");
                });

            modelBuilder.Entity("DAL.Models.TypeOfGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfGoods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wood"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Concrete"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Plastic"
                        });
                });

            modelBuilder.Entity("DAL.Models.Good", b =>
                {
                    b.HasOne("DAL.Models.TypeOfGood", "TypeOfGood")
                        .WithMany("Goods")
                        .HasForeignKey("TypeOfGoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfGood");
                });

            modelBuilder.Entity("DAL.Models.Order", b =>
                {
                    b.HasOne("DAL.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Good", "Goods")
                        .WithMany("Orders")
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("DAL.Models.Queue", b =>
                {
                    b.HasOne("DAL.Models.Order", "Orders")
                        .WithMany("Queue")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DAL.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DAL.Models.Good", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DAL.Models.Order", b =>
                {
                    b.Navigation("Queue");
                });

            modelBuilder.Entity("DAL.Models.TypeOfGood", b =>
                {
                    b.Navigation("Goods");
                });
#pragma warning restore 612, 618
        }
    }
}
